

[{"title":"The Code Architecture","url":"\/architecture","slug":"architecture","content":"\nAre you searching for&nbsp;:\n\n-   organizing your own app code&nbsp;: see <span class=\"\" data-rot=\"_flzsbal.pbz\/qbp\/pheerag\/orfg_cenpgvprf.ugzy\">symfony good practices<\/span> or look at the <span class=\"\" data-rot=\"_tvguho.pbz\/Chfujbeq\/Chfujbeq\/gerr\/znva\/cnpxntrf\/fxryrgba\">demo app<\/span>\n-   organ"},{"title":"Command","url":"\/command","slug":"command","content":"\nAt any moment, you can get the avalaible command from symfony by typing `php bin\/console list`.\n\nNow, let's see what command we have and how useful there are.\n\nThe list above may vary depending on [installed extensions](extensions)\n\nTo get more details on each command line, just type -h (eg `php bi"},{"title":"Entity Filter","url":"\/component\/entity-filter","slug":"component\/entity-filter","content":"\nThe **Entity Filter** may be the most powerful thing built for Pushword.\n\nIt's offer to apply _what you want_ on properties from a class (mostly entity and often mostly `Page`).\n\nIt can be called from **PHP** (from `Pushword\\Core\\Component\\EntityFilter\\Manager`) or directly in **Twig** template fil"},{"title":"Configuration","url":"\/configuration","slug":"configuration","content":"\nBefore to **code**, Pushword offers the ability to configure a lot of things from a **yaml** (or PHP if you preferred) configuration file.\n\nIf you used the [automatic installer](\/installation) to create a new _pushword project_, just open `config\/packages\/pushword.yaml` and start configure your **w"},{"title":"Contribute","url":"\/contribute","slug":"contribute","content":"\nSource code is host on <span class=\"\" data-rot=\"_tvguho.pbz\/Chfujbeq\/Chfujbeq\"><svg class=\"fill-current w-4 inline-block -mt-1\" viewBox=\"0 0 496 512\"><!-- Font Awesome Free 5.15.4 by @fontawesome - https:\/\/fontawesome.com License - https:\/\/fontawesome.com\/license\/free (Icons: CC BY 4.0, Fonts: SIL "},{"title":"Create an extension","url":"\/create-extension","slug":"create-extension","content":"\nEach extension is built as a [symfony bundle](https:\/\/symfony.com\/doc\/current\/bundles.html).\n\nWhen you know that, you just have to learn how to [create a bundle for symfony](https:\/\/symfony.com\/doc\/current\/bundles.html) and you will know how to make an extension for Pushword.\n\nThere is some simple "},{"title":"Editor Hidden Super Power<br><small>and Markdown Cheatsheet<\/small>","url":"\/editor","slug":"editor","content":"\n<div class=\"flex flex-wrap max-w-5xl\">\n\n    <div class=\"order-2 w-fulloverflow-hidden lg:order-1 lg:w-4\/5\">\n        <div class=\"p-3 prose dark:prose-light max-w-none\">\n            <h1>Editor Hidden Super Power<br><small>and Markdown Cheatsheet<\/small><\/h1>\n            <p markdown=><p>After installi"},{"title":"Admin Block Editor","url":"\/extension\/admin-block-editor","slug":"extension\/admin-block-editor","content":"\nSupercharge default admin with a rich text editor wich managed blocks.\n\n## Install\n\n```shell\ncomposer require pushword\/admin-block-editor\n```\n\nThat's it&nbsp;! If you have a custom installation (not used the [default installer](\/installation)),\nyou may have a look inside `vendor\/pushword\/admin\/inst"},{"title":"Admin","url":"\/extension\/admin","slug":"extension\/admin","content":"\nCreate, edit, delete Page, Media, User with an interface built on top of Sonata Admin.\n\n## Install\n\n```shell\ncomposer require pushword\/admin\n```\n\nThat's it&nbsp;! If you have a custom installation (not used the [default installer](\/installation)),\nyou may have a look inside `vendor\/pushword\/admin\/i"},{"title":"Advanced Main Image","url":"\/extension\/advanced-main-image","slug":"extension\/advanced-main-image","content":"\nSupercharge the Pushword Admin with a new admin form field to customize the main image format from not visible to HERO + default template files.\n\n## Install\n\n```shell\ncomposer require pushword\/advanced-main-imaged\n```\n\n## Configuration\n\nIf you want to go forward than a default install (activating a"},{"title":"Conversation","url":"\/extension\/conversation","slug":"extension\/conversation","content":"\nExtend your Pushword website with **comments**, a **contact** form or just an **user input**.\n\n## Install\n\nVia <span class=\"\" data-rot=\"_cnpxntvfg.bet\/cnpxntrf\/chfujbeq\/pbairefngvba\">Packagist<\/span>&nbsp;:\n\n```\n# Get the Bundle\ncomposer require pushword\/conversation\n```\n\nThat's it&nbsp;! If you ha"},{"title":"Facebook","url":"\/extension\/facebook","slug":"extension\/facebook","content":"\nWrite from Facebook on your page managed by Pushword.\n\n## Install\n\n```\ncomposer require pushword\/facebook\n```\n\n## Usage\n\nFor now, this extension just permit to show last post from a page.\n\n```\n{{ facebook_last_post('Google') }}\n# will return the last post from Google's Facebook Page render via \/com"},{"title":"Flat","url":"\/extension\/flat","slug":"extension\/flat","content":"\nTransform Pushword in a FlatFile CMS.\n\n## Install\n\n```\ncomposer require pushword\/flat-file\n```\n\n## Configure (if needed)\n\nGlobally under `pushword_static_generator` (in `config\/packages`).\n\nOr for _multi-sites_ in `config\/package\/pushword.yaml`.\n\n```yaml\n...:\n  flat_content_dir: content #default va"},{"title":"Redirect to extensions","url":"\/extension","slug":"extension","content":"\nLocation: \/extensions\n"},{"title":"Page Scanner","url":"\/extension\/page-scanner","slug":"extension\/page-scanner","content":"\nFind dead links, 404, 301 and more (command line or admin).\n\n## Install\n\n```shell\ncomposer require pushword\/page-scanner\n```\n\nThat's it&nbsp;! If you have a custom installation (not used the [default installer](\/installation)),\nyou may have a look inside `vendor\/pushword\/admin\/install.php`.\n\n## Com"},{"title":"Page Update Notifier","url":"\/extension\/page-update-notifier","slug":"extension\/page-update-notifier","content":"\nGet mail notification when your pushword content (page) is edited.\n\n## Install\n\n```\ncomposer require pushword\/page-update-notifier\n```\n\n## Configure\n\nAdd in your current `config\/package\/pushword.yaml` for an App or globally under `pushword_page_update_notifier:`\n\n```\n    page_update_notification_fr"},{"title":"Static Generator","url":"\/extension\/static-generator","slug":"extension\/static-generator","content":"\nGenerate a static website serve by github pages, apaches with one command or via the [admin](https:\/\/pushword.piedweb.com\/extension\/admin).\n\n## Install\n\n```shell\ncomposer require pushword\/template-editor\n```\n\nThat's it&nbsp;! If you have a custom installation (not used the [default installer](\/inst"},{"title":"SVG","url":"\/extension\/svg","slug":"extension\/svg","content":"\nAdd SVG with ease in your main content or in a template file via a twig function.\n\n## Install\n\n```shell\ncomposer require pushword\/svg\n```\n\n## Usage\n\nBy default, this extension use <span class=\"\" data-rot=\"_sbagnjrfbzr.pbz\/vpbaf\">FontAwesome 5.15<\/span>. You just need to use twig `svg` function&nbsp"},{"title":"Template Editor","url":"\/extension\/template-editor","slug":"extension\/template-editor","content":"\nEdit view file online in the [admin](https:\/\/pushword.piedweb.com\/extension\/admin).\n\n## Install\n\n```shell\ncomposer require pushword\/template-editor\n```\n\nThat's it&nbsp;! If you have a custom installation (not used the [default installer](\/installation)),\nyou may have a look inside `vendor\/pushword\/"},{"title":"Version","url":"\/extension\/version","slug":"extension\/version","content":"\nVersioning pages with Pushword CMS.\n\n## Install\n\n```shell\ncomposer require pushword\/version\n```\n\nAdd Routes\n\n```yaml\nadmin:\n    resource: \"@PushwordVersionBundle\/VersionRoutes.yaml\"\n# or do it in 1 command line\n# $ sed -i '1s\/^\/version:\\n    resource: \"@PushwordVersionBundle\\\/VersionRoutes.yaml\"\\n\/"},{"title":"Find your missing feature with a Pushword Extension","url":"\/extensions","slug":"extensions","content":"\n-   [Admin](\/extension\/admin)\n    Create, edit, delete Page, Media, User with an interface built on top of Sonata Admin.\n-   [Admin Block Editor](\/extension\/admin-block-editor)\n    Supercharge default admin with a rich text editor wich managed blocks.\n-   [Advanced Main Image](\/extension\/advanced-m"},{"title":"<span class=\"block mt-6 leading-relaxed\">Build modern <em class=\"font-light\">Content First<\/em> websites rapidly <br> <span class=\"text-primary dark:text-white\">Manage and maintain it as quickly<\/span><\/span>","url":"\/","slug":"homepage","content":"\n<div class=\"flex flex-row max-w-screen-lg mx-auto mb-6\">\n\n<div class=\"pr-6 -mt-3\" markdown=1>\n\nPuswhord is a PHP <strong>CMS<\/strong> to <strong>rapidly<\/strong> create, manage and maintain <strong>extandable Website(s)<\/strong>.\n\nIt make it easy to create amazing <strong>searchable<\/strong> websit"},{"title":"Installation","url":"\/installation","slug":"installation","content":"\n## Requirements\n\n-   **PHP** &gt;=7.4\n-   **PHP extensions**&nbsp;: dom, curl, libxml, mbstring, zip, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, fileinfo\n-   **Composer** (<span class=\"\" data-rot=\"_trgpbzcbfre.bet\/qbjaybnq\/\">how to install composer<\/span>)\n\n## Automatic installer"},{"title":"License and contributors","url":"\/license","slug":"license","content":"\n## Contributors\n\n- Robin from [PiedWeb](https:\/\/piedweb.com)\n\n## MIT License\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation "},{"title":"Managing Assets (css\/js)","url":"\/manage-assets","slug":"manage-assets","content":"\nThe default installer copy\/paste a skeleton for a website _colored_ with tailwindcss.\n\nTo update it juste go in `.\/assets` and edit `app.js`, `app.css`, directly the [tailwind configuration](https:\/\/tailwindcss.com\/docs\/configuration) or the `webpack.config.js`.\n\nThen run wepback&nbsp;:\n\n```\nyarn &"},{"title":"Customize the current theme","url":"\/override-theme","slug":"override-theme","content":"\nThere is at least two ways to override template file and customize the html wich is rendered by Pushword&nbsp;: First is [App Way](#app) (app per app), second is the [bundle way](#symfony) (global).\n\n## The Pushword App Way {id=app}\n\nSimplest way is to override it (partially or completly) by create"},{"title":"Roadmap","url":"\/roadmap","slug":"roadmap","content":"\n## BugFix &amp;&amp; To finish\n\n-   **Admin** Fix collapse right bar not working (not storing previous session)\n-   **Admin Block Editor Tools**&nbsp;: Image &gt; Add link + Alt and redesign Legend\n-   **Admin Block Editor**&nbsp;: document block and add Help link when advanced knowledge is needed\n"},{"title":"Themes","url":"\/themes","slug":"themes","content":"\nTo customize your website theme, you may be insterested in&nbsp;:\n\n-   [customize the assets](\/manage-assets) (css and javascript)\n-   [customize template file](\/override-theme) wich are rendering Pushword pages\n-   edit template file for [admin](\/extension\/admin) with the extension [template-edito"},{"title":"Upgrade Guide","url":"\/upgrade","slug":"upgrade","content":"\nSmooth way is to use [composer](https:\/\/getcomposer.org), a dependency manager for PHP.\n\nRun `composer update` and the job is done (almost).\n\nIf you are doing a major upgrade, find the upgrade guide down there.\n\n## To 0.0.728\n\n-   Update stylesheets\n\n```\ncd assets &amp;&amp; yarn &amp;&amp; yarn en"}]

